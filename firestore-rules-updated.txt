rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null && request.auth.uid != null; }
    function isAdmin() { return isSignedIn() && exists(/databases/$(database)/documents/adminEmails/$(request.auth.token.email)); }

    // Admin directory
    match /adminEmails/{emailId} {
      allow read, create, update, delete: if isAdmin();
    }

    // Users
    match /users/{uid} {
      allow read: if isSignedIn() && (request.auth.uid == uid || isAdmin());
      allow create: if isSignedIn() && request.auth.uid == uid;
      allow update: if isSignedIn() && request.auth.uid == uid;
      // delete forbidden except admin via console; omit explicit delete rule
    }

    // Vendors
    match /vendors/{vendorId} {
      allow read: if resource.data.approved == true || (isSignedIn() && (
        get(/databases/$(database)/documents/vendors/$(vendorId)).data.ownerUid == request.auth.uid || isAdmin()
      ));
      allow create: if isSignedIn() && (request.resource.data.ownerUid == request.auth.uid || isAdmin());
      allow update, delete: if isSignedIn() && (
        request.auth.uid == resource.data.ownerUid || isAdmin()
      );
    }

    // Attendees
    match /attendees/{attendeeId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.ownerUid;
      allow create: if isSignedIn() && request.resource.data.ownerUid == request.auth.uid;
    }

    // Leads
    match /leads/{leadId} {
      allow read: if isSignedIn() && (
        (
          exists(/databases/$(database)/documents/attendees/$(resource.data.attendeeId)) &&
          get(/databases/$(database)/documents/attendees/$(resource.data.attendeeId)).data.ownerUid == request.auth.uid
        ) || (
          exists(/databases/$(database)/documents/vendors/$(resource.data.vendorId)) &&
          get(/databases/$(database)/documents/vendors/$(resource.data.vendorId)).data.ownerUid == request.auth.uid
        ) || isAdmin()
      );
      allow create, update: if isSignedIn() && (
        request.resource.data.createdByUid == request.auth.uid && (
          (exists(/databases/$(database)/documents/attendees/$(request.resource.data.attendeeId)) &&
           get(/databases/$(database)/documents/attendees/$(request.resource.data.attendeeId)).data.ownerUid == request.auth.uid) ||
          (exists(/databases/$(database)/documents/vendors/$(request.resource.data.vendorId)) &&
           get(/databases/$(database)/documents/vendors/$(request.resource.data.vendorId)).data.ownerUid == request.auth.uid)
        )
      ) || isAdmin();
    }

    match /{document=**} { allow read, write: if false; }
  }
}