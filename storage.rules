rules_version = '2';
service firebase.storage {
	match /b/{bucket}/o {
		function isSignedIn() { return request.auth != null && request.auth.uid != null; }

		// Primary: owner-scoped uploads under users/{uid}/...
		match /users/{uid}/{allPaths=**} {
			allow read: if true; // Publicly readable assets (tighten later if needed)
			allow write: if isSignedIn() && request.auth.uid == uid;
		}

		// Temporary compatibility: legacy attendee path attendees/{uid}/...
		// This allows older builds to continue uploading without CORS/auth confusion.
		match /attendees/{uid}/{allPaths=**} {
			allow read: if true;
			allow write: if isSignedIn() && request.auth.uid == uid;
		}

		// Vendor uploads: readable by public; writes allowed when signed in
		match /vendors/{vendorId}/{allPaths=**} {
			allow read: if true;
			allow write: if isSignedIn();
		}

		// Default deny
		match /{allPaths=**} {
			allow read, write: if false;
		}
	}
}
