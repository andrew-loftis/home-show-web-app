rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() { 
      return request.auth != null && request.auth.uid != null; 
    }
    
    function isOwner(uid) { 
      return isSignedIn() && request.auth.uid == uid; 
    }
    
    // ADMIN CHECK - Complete access for andrew@houseofkna.com
    function isAdmin() {
      return isSignedIn() && request.auth.token.email == 'andrew@houseofkna.com';
    }

    // Admin registry - COMPLETE ACCESS for admins
    match /adminEmails/{emailId} {
      allow read, write: if true; // Public read for admin checking
      allow create, update, delete: if isAdmin();
    }

    // Users collection - ADMIN COMPLETE ACCESS
    match /users/{uid} {
      allow read, write: if isAdmin(); // Admin can see/edit ALL users
      allow read: if isOwner(uid); // Users can read their own profile
      allow create: if isSignedIn(); // Anyone can create their profile
      allow update: if isOwner(uid); // Users can update their own profile
    }

    // Vendors collection - ROLE-BASED ACCESS
    match /vendors/{vendorId} {
      allow read, write: if isAdmin(); // Admin can see/edit ALL vendors
      // Approved vendors are public (for attendees to see)
      allow read: if resource.data.approved == true;
      // Vendors can read/edit their own profile
      allow read, update: if isSignedIn() && resource.data.ownerUid == request.auth.uid;
      // Anyone can create vendor registration
      allow create: if isSignedIn();
    }

    // Attendees collection - ROLE-BASED ACCESS  
    match /attendees/{attendeeId} {
      allow read, write: if isAdmin(); // Admin can see/edit ALL attendees
      // Attendees can only see/edit their own profile
      allow read, update: if isSignedIn() && resource.data.ownerUid == request.auth.uid;
      allow create: if isSignedIn();
    }

    // Leads collection - ROLE-BASED ACCESS
    match /leads/{leadId} {
      allow read, write: if isAdmin(); // Admin can see/edit ALL leads
      // Vendors can see leads for their booths
      allow read: if isSignedIn() && exists(/databases/$(database)/documents/vendors/$(resource.data.vendorId)) &&
                  get(/databases/$(database)/documents/vendors/$(resource.data.vendorId)).data.ownerUid == request.auth.uid;
      // Attendees can see their own leads
      allow read: if isSignedIn() && exists(/databases/$(database)/documents/attendees/$(resource.data.attendeeId)) &&
                  get(/databases/$(database)/documents/attendees/$(resource.data.attendeeId)).data.ownerUid == request.auth.uid;
      // Anyone can create leads
      allow create: if isSignedIn();
    }

    // Booth layout collection - ADMIN COMPLETE ACCESS
    match /boothLayout/{boothId} {
      allow read, write: if isAdmin(); // Admin COMPLETE access
      allow read: if isSignedIn(); // Everyone can see booth layout
    }

    // Legacy booths collection - ADMIN COMPLETE ACCESS
    match /booths/{boothId} {
      allow read, write: if isAdmin(); // Admin COMPLETE access
      allow read: if isSignedIn(); // Everyone can see booths
    }

    // Public content - ADMIN COMPLETE ACCESS
    match /public/{docId} {
      allow read: if true; // Public read access
      allow write: if isAdmin(); // ADMIN COMPLETE access
    }

    // User notifications - ROLE-BASED ACCESS
    match /notifications/{notificationId} {
      allow read, write: if isAdmin(); // Admin can see/edit ALL notifications
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // ADMIN COMPLETE ACCESS - catch-all for any other collections
    match /{document=**} { 
      allow read, write: if isAdmin(); // Admin can access EVERYTHING
    }
  }
}
